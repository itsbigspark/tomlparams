name: Bump version, tag and release
on:
  push:
    branches:
      - main
  workflow_dispatch:
jobs:
  unit-tests:
    runs-on: ubuntu-latest
    permissions: read-all
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']
    steps:
      - name: Install poetry
        shell: bash
        run: pipx install poetry
      
      - name: Fetch repo
        uses: actions/checkout@v3

      - name: Configure poetry
        shell: bash
        run: poetry config virtualenvs.in-project true

      - name: Poetry Lock
        shell: bash
        run: poetry lock

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'

      - name: Install dependencies
        shell: bash
        run: poetry install

      - name: Run unit tests
        shell: bash
        run: poetry run pytest

      - name: Run mypy
        shell: bash
        run: poetry run mypy
        
  bump-version-tag:
    runs-on: ubuntu-latest
    needs: unit-tests
    permissions:
      contents: write
    steps:
      - name: Install poetry
        shell: bash
        run: pipx install poetry
      
      - name: Fetch repo
        uses: actions/checkout@v3

      - name: Configure poetry
        shell: bash
        run: poetry config virtualenvs.in-project true

      - name: Poetry Lock
        shell: bash
        run: poetry lock

      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'poetry'

      - name: Install dependencies
        shell: bash
        run: poetry install

      - name: Bump version
        shell: bash
        run: poetry version patch

      - name: Get new version after bump
        shell: bash
        run: echo "bumped_version=$(poetry version -s)" >> $GITHUB_ENV

      - name: Update dunder version
        shell: bash
        run: sed -i "/__version__/c\__version__ = '${{ env.bumped_version }}'" tomlparams/__init__.py

      - name: Tag and commit
        shell: bash
        run: |
          git config user.name "githubactions"
          git config user.email "githubactions@github.com"
          git add pyproject.toml
          git add tomlparams/__init__.py
          git commit -m "bump version"
          git tag -a v${{ env.bumped_version }} -m "v${{ env.bumped_version }}"
          git push --follow-tags origin main

  release:
    runs-on: ubuntu-latest
    needs: bump-version-tag
    environment:
      name: pypi
      url: https://pypi.org/p/tomlparams
    permissions:
      id-token: write
    steps:
      - name: Install poetry
        shell: bash
        run: pipx install poetry
      
      - name: Fetch repo
        uses: actions/checkout@v3

      - name: Configure poetry
        shell: bash
        run: poetry config virtualenvs.in-project true

      - name: Poetry Lock
        shell: bash
        run: poetry lock

      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'poetry'

      - name: Install dependencies
        shell: bash
        run: poetry install

      - name: Build
        shell: bash
        run: poetry build

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1